apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: gatus
  namespace: gatus
spec:
  interval: 15m
  chart:
    spec:
      chart: gatus
      version: 2.13.1
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
  timeout: 20m
  maxHistory: 3
  driftDetection:
    mode: warn
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    TZ: ${TZ}
    ingress:
      main:
        enabled: true
        ingressClassName: internal
        annotations:
          gethomepage.dev/instance: "internal"
          gatus.home-operations.com/endpoint: |
            enabled: false
        hosts:
          - host: gatus.${INGRESS_URL}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - gatus.${INGRESS_URL}
        integrations:
          certManager:
            enabled: true
            certificateIssuer: "domain-0-wildcard"
          homepage:
            enabled: true
            group: Default
    cnpg:
      main:
        enabled: false
    configInitImage:
      repository: ghcr.io/home-operations/gatus-sidecar
      pullPolicy: IfNotPresent
      tag: 0.0.4@sha256:be7ec7fe1f6efc6090856a1ba4d1b9b023c38a0895314c8bc46d4343b91f2b22
    workload:
      main:
        podSpec:
          containers:
            main:
              imageSelector: image
              env:
                GATUS_CONFIG_PATH: "{{ .Values.persistence.config.mountPath }}"
            #initContainers:
            config-init:
              enabled: true
              #type: init
              imageSelector: configInitImage
              args:
                - --auto-ingresses=true
                #- --auto-routes=false
                #- --auto-services=false
                - --auto-group=true
                #- --output=/config/gatus-sidecar.yaml
                #- --default-dns=tcp://blocky-dns.blocky.svc.cluster.local:53
    persistence:
      config-dir:
        enabled: true
        mountPath: /config
        type: emptyDir
        targetSelectAll: true
    # -- Whether Role Based Access Control objects like roles and rolebindings should be created
    rbac:
      main:
        enabled: true
        primary: true
        clusterWide: true
        rules:
          - apiGroups:
              - "networking.k8s.io"
            resources:
              - "ingresses"
            verbs:
              - "get"
              - "list"
              - "watch"
          - apiGroups: [""]
            resources:
              - "configmaps"
              - "secrets"
              - "services"
            verbs:
              - "get"
              - "list"
              - "watch"
    # -- The service account the pods will use to interact with the Kubernetes API
    serviceAccount:
      main:
        enabled: true
        primary: true

    podOptions:
      automountServiceAccountToken: true

    configmap:
      config:
        enabled: true
        data:
          config.yaml: |
            endpoints:
              - name: Home Assistant
                group: Home Automation
                url: http://${HASS_EXTERNAL_IP}:8123
                interval: 300s
                conditions:
                  - "[STATUS] == 200"
              - name: Blocky DNS
                group: Kubernetes
                url: ${BLOCKY_IP}
                interval: 300s
                dns:
                  query-name: google.com
                  query-type: "A"
                conditions:
                  - "[DNS_RCODE] == NOERROR"
              - name: Adguard DNS
                group: Home Automation
                url: ${HASS_EXTERNAL_IP}
                interval: 300s
                dns:
                  query-name: google.com
                  query-type: "A"
                conditions:
                  - "[DNS_RCODE] == NOERROR"
              - name: TrueNAS Scale
                group: Other
                url: http://${TRUENAS_EXTERNAL_IP}:81
                interval: 300s
                conditions:
                  - "[STATUS] == 200"
